{"ast":null,"code":"import _regeneratorRuntime from \"/Users/magda/Desktop/Strive-Blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/magda/Desktop/Strive-Blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/magda/Desktop/Strive-Blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/magda/Desktop/Strive-Blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/magda/Desktop/Strive-Blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/magda/Desktop/Strive-Blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/magda/Desktop/Strive-Blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/magda/Desktop/Strive-Blog/src/components/blog/blog-list/index.jsx\";\nimport React, { Component } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport BlogItem from '../blog-item'; // import posts from \"../../../data/posts.json\";\n\nvar BlogList = /*#__PURE__*/function (_Component) {\n  _inherits(BlogList, _Component);\n\n  function BlogList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BlogList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BlogList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      posts: []\n    };\n    _this.componentDidMount = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch('http://localhost:3001/blogPosts/');\n\n            case 3:\n              response = _context.sent;\n\n              if (!response.ok) {\n                _context.next = 11;\n                break;\n              }\n\n              _context.next = 7;\n              return response.json();\n\n            case 7:\n              data = _context.sent;\n\n              _this.setState({\n                posts: data\n              });\n\n              _context.next = 12;\n              break;\n\n            case 11:\n              console.log('Error while getting response');\n\n            case 12:\n              _context.next = 17;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 14]]);\n    }));\n    return _this;\n  }\n\n  _createClass(BlogList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }\n      }, this.state.posts.map(function (post) {\n        return /*#__PURE__*/React.createElement(Col, {\n          md: 4,\n          style: {\n            marginBottom: 50\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(BlogItem, Object.assign({\n          key: post.title\n        }, post, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }\n        })));\n      }));\n    }\n  }]);\n\n  return BlogList;\n}(Component);\n\nexport { BlogList as default };","map":{"version":3,"sources":["/Users/magda/Desktop/Strive-Blog/src/components/blog/blog-list/index.jsx"],"names":["React","Component","Row","Col","BlogItem","BlogList","state","posts","componentDidMount","fetch","response","ok","json","data","setState","console","log","map","post","marginBottom","title"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,OAAOC,QAAP,MAAqB,cAArB,C,CACA;;IACqBC,Q;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE;AADD,K;UAIRC,iB,yEAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEKC,KAAK,CAAC,kCAAD,CAFV;;AAAA;AAEZC,cAAAA,QAFY;;AAAA,mBAGZA,QAAQ,CAACC,EAHG;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAIGD,QAAQ,CAACE,IAAT,EAJH;;AAAA;AAIVC,cAAAA,IAJU;;AAKd,oBAAKC,QAAL,CAAc;AACZP,gBAAAA,KAAK,EAAEM;AADK,eAAd;;AALc;AAAA;;AAAA;AASdE,cAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;;AATc;AAAA;AAAA;;AAAA;AAAA;AAAA;AAYhBD,cAAAA,OAAO,CAACC,GAAR;;AAZgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;6BAgBX;AAAA;;AACP,0BACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKV,KAAL,CAAWC,KAAX,CAAiBU,GAAjB,CAAqB,UAACC,IAAD;AAAA,4BACpB,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAY,UAAA,KAAK,EAAE;AAAEC,YAAAA,YAAY,EAAE;AAAhB,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAED,IAAI,CAACE;AAApB,WAA+BF,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CADoB;AAAA,OAArB,CADH,CADF;AASD;;;;EA/BmCjB,S;;SAAjBI,Q","sourcesContent":["import React, { Component } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport BlogItem from '../blog-item';\n// import posts from \"../../../data/posts.json\";\nexport default class BlogList extends Component {\n  state = {\n    posts: [],\n  };\n\n  componentDidMount = async () => {\n    try {\n      let response = await fetch('http://localhost:3001/blogPosts/');\n      if (response.ok) {\n        let data = await response.json();\n        this.setState({\n          posts: data,\n        });\n      } else {\n        console.log('Error while getting response');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  render() {\n    return (\n      <Row>\n        {this.state.posts.map((post) => (\n          <Col md={4} style={{ marginBottom: 50 }}>\n            <BlogItem key={post.title} {...post} />\n          </Col>\n        ))}\n      </Row>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}